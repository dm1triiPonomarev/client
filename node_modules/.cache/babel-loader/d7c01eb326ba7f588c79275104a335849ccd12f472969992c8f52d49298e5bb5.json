{"ast":null,"code":"const o = e => {\n    const a = \"=\".repeat((4 - e.length % 4) % 4),\n      r = (e + a).replace(/-/g, \"+\").replace(/_/g, \"/\"),\n      t = window.atob(r),\n      n = new Uint8Array(t.length);\n    for (let i = 0; i < t.length; ++i) n[i] = t.charCodeAt(i);\n    return n;\n  },\n  s = ({\n    publicKey: e\n  }) => ({\n    getSubscription: async () => {\n      if (!(\"serviceWorker\" in navigator) || !(\"PushManager\" in window)) throw {\n        errorCode: \"ServiceWorkerAndPushManagerNotSupported\"\n      };\n      const r = await navigator.serviceWorker.ready;\n      if (!r.pushManager) throw {\n        errorCode: \"PushManagerUnavailable\"\n      };\n      if (await r.pushManager.getSubscription()) throw {\n        errorCode: \"ExistingSubscription\"\n      };\n      const n = o(e);\n      return await r.pushManager.subscribe({\n        applicationServerKey: n,\n        userVisibleOnly: !0\n      });\n    }\n  });\nexport { s as useSubscribe };","map":{"version":3,"names":["o","e","a","repeat","length","r","replace","t","window","atob","n","Uint8Array","i","charCodeAt","s","useSubscribe","publicKey","getSubscription","navigator","errorCode","serviceWorker","ready","pushManager","subscribe","applicationServerKey","userVisibleOnly"],"sources":["/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/react-pwa-push-notifications/src/hooks/useSubscribe.ts"],"sourcesContent":["const urlBase64ToUint8Array = (base64String: string): Uint8Array => {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n};\n\nexport enum Errors {\n    ServiceWorkerAndPushManagerNotSupported = \"ServiceWorkerAndPushManagerNotSupported\",\n    PushManagerUnavailable = \"PushManagerUnavailable\",\n    ExistingSubscription = \"ExistingSubscription\",\n    Unknown = \"Unknown\"\n}\n\ninterface SubscribeProps {\n    publicKey: string;\n}\n\ninterface ErrorObject {\n    errorCode: Errors;\n}\n\nexport const useSubscribe = ({ publicKey }: SubscribeProps) => {\n    const getSubscription = async (): Promise<PushSubscription> => {\n        if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\n            throw { errorCode: Errors.ServiceWorkerAndPushManagerNotSupported } as ErrorObject;\n        }\n\n        const registration = await navigator.serviceWorker.ready;\n\n        if (!registration.pushManager) {\n            throw { errorCode: Errors.PushManagerUnavailable } as ErrorObject;\n        }\n\n        const existingSubscription = await registration.pushManager.getSubscription();\n\n        if (existingSubscription) {\n            throw { errorCode: Errors.ExistingSubscription } as ErrorObject;\n        }\n\n        const convertedVapidKey = urlBase64ToUint8Array(publicKey);\n        return await registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n        });\n    };\n\n    return {getSubscription};\n};\n"],"mappings":"AAAA,MAAMA,CAAA,GAAyBC,CAAA,IAAqC;IAChE,MAAMC,CAAA,GAAU,IAAIC,MAAA,EAAQ,IAAIF,CAAA,CAAaG,MAAA,GAAS,KAAK,CAAC;MACtDC,CAAA,IAAUJ,CAAA,GAAeC,CAAA,EAC1BI,OAAA,CAAQ,MAAM,GAAG,EACjBA,OAAA,CAAQ,MAAM,GAAG;MAEhBC,CAAA,GAAUC,MAAA,CAAOC,IAAA,CAAKJ,CAAM;MAC5BK,CAAA,GAAc,IAAIC,UAAA,CAAWJ,CAAA,CAAQH,MAAM;IAEjD,SAASQ,CAAA,GAAI,GAAGA,CAAA,GAAIL,CAAA,CAAQH,MAAA,EAAQ,EAAEQ,CAAA,EACtBF,CAAA,CAAAE,CAAA,IAAKL,CAAA,CAAQM,UAAA,CAAWD,CAAC;IAGlC,OAAAF,CAAA;EACX;EAiBaI,CAAA,GAAeC,CAAC;IAAEC,SAAA,EAAAf;EAAA,OAyBpB;IAACgB,eAAA,EAxBgB,MAAAA,CAAA,KAAuC;MAC3D,IAAI,EAAE,mBAAmBC,SAAA,KAAc,EAAE,iBAAiBV,MAAA,GAChD;QAAEW,SAAA,EAAW;MAAA;MAGjB,MAAAd,CAAA,GAAe,MAAMa,SAAA,CAAUE,aAAA,CAAcC,KAAA;MAE/C,KAAChB,CAAA,CAAaiB,WAAA,EACR;QAAEH,SAAA,EAAW;MAAA;MAKvB,IAF6B,MAAMd,CAAA,CAAaiB,WAAA,CAAYL,eAAA,CAAgB,GAGlE;QAAEE,SAAA,EAAW;MAAA;MAGjB,MAAAT,CAAA,GAAoBV,CAAA,CAAsBC,CAAS;MAClD,aAAMI,CAAA,CAAaiB,WAAA,CAAYC,SAAA,CAAU;QAC5CC,oBAAA,EAAsBd,CAAA;QACtBe,eAAA,EAAiB;MAAA,CACpB;IAAA;EAGkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}