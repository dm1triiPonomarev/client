{"ast":null,"code":"import _toConsumableArray from \"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar t = /*#__PURE__*/function () {\n  function t(_t) {\n    _classCallCheck(this, t);\n    this.mode = 4, this.data = void 0, this.parsedData = [], this.data = _t;\n    var e = 0;\n    var s = this.data.length;\n    for (; e < s; e++) {\n      var _t2 = this.data.charCodeAt(e);\n      var _s = void 0;\n      _s = _t2 > 65536 ? [240 | (1835008 & _t2) >>> 18, 128 | (258048 & _t2) >>> 12, 128 | (4032 & _t2) >>> 6, 128 | 63 & _t2] : _t2 > 2048 ? [224 | (61440 & _t2) >>> 12, 128 | (4032 & _t2) >>> 6, 128 | 63 & _t2] : _t2 > 128 ? [192 | (1984 & _t2) >>> 6, 128 | 63 & _t2] : [_t2], this.parsedData.push(_s);\n    }\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData), this.parsedData.length !== this.data.length && (this.parsedData.unshift(191), this.parsedData.unshift(187), this.parsedData.unshift(239));\n  }\n  _createClass(t, [{\n    key: \"getLength\",\n    value: function getLength() {\n      return this.parsedData.length;\n    }\n  }, {\n    key: \"write\",\n    value: function write(_t3) {\n      var e = 0;\n      var s = this.parsedData.length;\n      for (; e < s; e++) _t3.put(this.parsedData[e], 8);\n    }\n  }]);\n  return t;\n}();\nvar e = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};\nvar s = /*#__PURE__*/function () {\n  function s(t, e) {\n    _classCallCheck(this, s);\n    this.totalCount = void 0, this.dataCount = void 0, this.totalCount = t, this.dataCount = e;\n  }\n  _createClass(s, null, [{\n    key: \"getRSBlocks\",\n    value: function getRSBlocks(t, e) {\n      var r = s.getRsBlockTable(t, e);\n      if (void 0 === r) throw new Error(\"bad rs block @ typeNumber:\" + t + \"/errorCorrectLevel:\" + e);\n      var o = r.length / 3,\n        n = [];\n      for (var _t4 = 0; _t4 < o; _t4++) {\n        var _e = r[3 * _t4],\n          _o = r[3 * _t4 + 1],\n          _i = r[3 * _t4 + 2];\n        for (var _t5 = 0; _t5 < _e; _t5++) n.push(new s(_o, _i));\n      }\n      return n;\n    }\n  }, {\n    key: \"getRsBlockTable\",\n    value: function getRsBlockTable(t, r) {\n      switch (r) {\n        case e.L:\n          return s.RS_BLOCK_TABLE[4 * (t - 1)];\n        case e.M:\n          return s.RS_BLOCK_TABLE[4 * (t - 1) + 1];\n        case e.Q:\n          return s.RS_BLOCK_TABLE[4 * (t - 1) + 2];\n        case e.H:\n          return s.RS_BLOCK_TABLE[4 * (t - 1) + 3];\n        default:\n          return;\n      }\n    }\n  }]);\n  return s;\n}();\ns.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\nvar r = /*#__PURE__*/function () {\n  function r() {\n    _classCallCheck(this, r);\n    this.buffer = [], this.length = 0;\n  }\n  _createClass(r, [{\n    key: \"get\",\n    value: function get(t) {\n      var e = Math.floor(t / 8);\n      return 1 == (this.buffer[e] >>> 7 - t % 8 & 1);\n    }\n  }, {\n    key: \"put\",\n    value: function put(t, e) {\n      for (var _s2 = 0; _s2 < e; _s2++) this.putBit(1 == (t >>> e - _s2 - 1 & 1));\n    }\n  }, {\n    key: \"getLengthInBits\",\n    value: function getLengthInBits() {\n      return this.length;\n    }\n  }, {\n    key: \"putBit\",\n    value: function putBit(t) {\n      var e = Math.floor(this.length / 8);\n      this.buffer.length <= e && this.buffer.push(0), t && (this.buffer[e] |= 128 >>> this.length % 8), this.length++;\n    }\n  }]);\n  return r;\n}();\nvar _ref = function () {\n    var t = new Array(256),\n      e = new Array(256);\n    for (var _e2 = 0; _e2 < 8; _e2++) t[_e2] = 1 << _e2;\n    for (var _e3 = 8; _e3 < 256; _e3++) t[_e3] = t[_e3 - 4] ^ t[_e3 - 5] ^ t[_e3 - 6] ^ t[_e3 - 8];\n    for (var _s3 = 0; _s3 < 255; _s3++) e[t[_s3]] = _s3;\n    return [t, e];\n  }(),\n  _ref2 = _slicedToArray(_ref, 2),\n  o = _ref2[0],\n  n = _ref2[1],\n  i = function i(t) {\n    if (t < 1) throw new Error(\"glog(\" + t + \")\");\n    return n[t];\n  },\n  h = function h(t) {\n    for (; t < 0;) t += 255;\n    for (; t >= 256;) t -= 255;\n    return o[t];\n  };\nvar l = /*#__PURE__*/function () {\n  function l(t, e) {\n    _classCallCheck(this, l);\n    if (this.num = void 0, void 0 === t.length) throw new Error(t.length + \"/\" + e);\n    var s = 0;\n    for (; s < t.length && 0 === t[s];) s++;\n    this.num = new Array(t.length - s + e);\n    for (var _e4 = 0; _e4 < t.length - s; _e4++) this.num[_e4] = t[_e4 + s];\n  }\n  _createClass(l, [{\n    key: \"get\",\n    value: function get(t) {\n      return this.num[t];\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.num.length;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(t) {\n      var e = new Array(this.getLength() + t.getLength() - 1);\n      for (var _s4 = 0; _s4 < this.getLength(); _s4++) for (var _r = 0; _r < t.getLength(); _r++) e[_s4 + _r] ^= h(i(this.get(_s4)) + i(t.get(_r)));\n      return new l(e, 0);\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(t) {\n      if (this.getLength() - t.getLength() < 0) return this;\n      var e = i(this.get(0)) - i(t.get(0)),\n        s = new Array(this.getLength());\n      for (var _t6 = 0; _t6 < this.getLength(); _t6++) s[_t6] = this.get(_t6);\n      for (var _r2 = 0; _r2 < t.getLength(); _r2++) s[_r2] ^= h(i(t.get(_r2)) + e);\n      return new l(s, 0).mod(t);\n    }\n  }]);\n  return l;\n}();\nvar a = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  c = function c(t) {\n    var e = 0;\n    for (; 0 !== t;) e++, t >>>= 1;\n    return e;\n  },\n  u = function u(t, e, s) {\n    switch (t) {\n      case 0:\n        return (e + s) % 2 == 0;\n      case 1:\n        return e % 2 == 0;\n      case 2:\n        return s % 3 == 0;\n      case 3:\n        return (e + s) % 3 == 0;\n      case 4:\n        return (Math.floor(e / 2) + Math.floor(s / 3)) % 2 == 0;\n      case 5:\n        return e * s % 2 + e * s % 3 == 0;\n      case 6:\n        return (e * s % 2 + e * s % 3) % 2 == 0;\n      case 7:\n        return (e * s % 3 + (e + s) % 2) % 2 == 0;\n      default:\n        throw new Error(\"bad maskPattern:\" + t);\n    }\n  },\n  d = function d(t) {\n    var e = new l([1], 0);\n    for (var _s5 = 0; _s5 < t; _s5++) e = e.multiply(new l([1, h(_s5)], 0));\n    return e;\n  },\n  p = function p(t, e) {\n    if (1 <= e && e < 10) switch (t) {\n      case 1:\n        return 10;\n      case 2:\n        return 9;\n      case 4:\n      case 8:\n        return 8;\n      default:\n        throw new Error(\"mode:\" + t);\n    } else if (e < 27) switch (t) {\n      case 1:\n        return 12;\n      case 2:\n        return 11;\n      case 4:\n        return 16;\n      case 8:\n        return 10;\n      default:\n        throw new Error(\"mode:\" + t);\n    } else {\n      if (!(e < 41)) throw new Error(\"type:\" + e);\n      switch (t) {\n        case 1:\n          return 14;\n        case 2:\n          return 13;\n        case 4:\n          return 16;\n        case 8:\n          return 12;\n        default:\n          throw new Error(\"mode:\" + t);\n      }\n    }\n  },\n  f = function f(t) {\n    var e = t.getModuleCount();\n    var s = 0;\n    for (var _r3 = 0; _r3 < e; _r3++) for (var _o2 = 0; _o2 < e; _o2++) {\n      var _n = 0;\n      var _i2 = t.isDark(_r3, _o2);\n      for (var _s6 = -1; _s6 <= 1; _s6++) if (!(_r3 + _s6 < 0 || e <= _r3 + _s6)) for (var _h = -1; _h <= 1; _h++) _o2 + _h < 0 || e <= _o2 + _h || 0 === _s6 && 0 === _h || _i2 === t.isDark(_r3 + _s6, _o2 + _h) && _n++;\n      _n > 5 && (s += 3 + _n - 5);\n    }\n    for (var _r4 = 0; _r4 < e - 1; _r4++) for (var _o3 = 0; _o3 < e - 1; _o3++) {\n      var _e5 = 0;\n      t.isDark(_r4, _o3) && _e5++, t.isDark(_r4 + 1, _o3) && _e5++, t.isDark(_r4, _o3 + 1) && _e5++, t.isDark(_r4 + 1, _o3 + 1) && _e5++, 0 !== _e5 && 4 !== _e5 || (s += 3);\n    }\n    for (var _r5 = 0; _r5 < e; _r5++) for (var _o4 = 0; _o4 < e - 6; _o4++) t.isDark(_r5, _o4) && !t.isDark(_r5, _o4 + 1) && t.isDark(_r5, _o4 + 2) && t.isDark(_r5, _o4 + 3) && t.isDark(_r5, _o4 + 4) && !t.isDark(_r5, _o4 + 5) && t.isDark(_r5, _o4 + 6) && (s += 40);\n    for (var _r6 = 0; _r6 < e; _r6++) for (var _o5 = 0; _o5 < e - 6; _o5++) t.isDark(_o5, _r6) && !t.isDark(_o5 + 1, _r6) && t.isDark(_o5 + 2, _r6) && t.isDark(_o5 + 3, _r6) && t.isDark(_o5 + 4, _r6) && !t.isDark(_o5 + 5, _r6) && t.isDark(_o5 + 6, _r6) && (s += 40);\n    var r = 0;\n    for (var _s7 = 0; _s7 < e; _s7++) for (var _o6 = 0; _o6 < e; _o6++) t.isDark(_o6, _s7) && r++;\n    return s += Math.abs(100 * r / e / e - 50) / 5 * 10, s;\n  };\nvar g = /*#__PURE__*/function () {\n  function g(t, e) {\n    _classCallCheck(this, g);\n    this.typeNumber = void 0, this.errorCorrectLevel = void 0, this.modules = [], this.moduleCount = 0, this.dataCache = null, this.dataList = [], this.typeNumber = t, this.errorCorrectLevel = e;\n  }\n  _createClass(g, [{\n    key: \"addData\",\n    value: function addData(e) {\n      var s = new t(e);\n      this.dataList.push(s), this.dataCache = null;\n    }\n  }, {\n    key: \"isDark\",\n    value: function isDark(t, e) {\n      if (t < 0 || this.moduleCount <= t || e < 0 || this.moduleCount <= e) throw new Error(t + \",\" + e);\n      return this.modules[t][e];\n    }\n  }, {\n    key: \"getModuleCount\",\n    value: function getModuleCount() {\n      return this.moduleCount;\n    }\n  }, {\n    key: \"make\",\n    value: function make() {\n      this.makeImpl(!1, this.getBestMaskPattern());\n    }\n  }, {\n    key: \"makeImpl\",\n    value: function makeImpl(t, e) {\n      this.moduleCount = 4 * this.typeNumber + 17, this.modules = new Array(this.moduleCount);\n      for (var _t7 = 0; _t7 < this.moduleCount; _t7++) {\n        this.modules[_t7] = new Array(this.moduleCount);\n        for (var _e6 = 0; _e6 < this.moduleCount; _e6++) this.modules[_t7][_e6] = null;\n      }\n      this.setupPositionProbePattern(0, 0), this.setupPositionProbePattern(this.moduleCount - 7, 0), this.setupPositionProbePattern(0, this.moduleCount - 7), this.setupPositionAdjustPattern(), this.setupTimingPattern(), this.setupTypeInfo(t, e), this.typeNumber >= 7 && this.setupTypeNumber(t), null == this.dataCache && (this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)), this.mapData(this.dataCache, e);\n    }\n  }, {\n    key: \"setupPositionProbePattern\",\n    value: function setupPositionProbePattern(t, e) {\n      for (var _s8 = -1; _s8 <= 7; _s8++) if (!(t + _s8 <= -1 || this.moduleCount <= t + _s8)) for (var _r7 = -1; _r7 <= 7; _r7++) e + _r7 <= -1 || this.moduleCount <= e + _r7 || (this.modules[t + _s8][e + _r7] = 0 <= _s8 && _s8 <= 6 && (0 === _r7 || 6 === _r7) || 0 <= _r7 && _r7 <= 6 && (0 === _s8 || 6 === _s8) || 2 <= _s8 && _s8 <= 4 && 2 <= _r7 && _r7 <= 4);\n    }\n  }, {\n    key: \"getBestMaskPattern\",\n    value: function getBestMaskPattern() {\n      var t = 0,\n        e = 0;\n      for (var _s9 = 0; _s9 < 8; _s9++) {\n        this.makeImpl(!0, _s9);\n        var _r8 = f(this);\n        (0 === _s9 || t > _r8) && (t = _r8, e = _s9);\n      }\n      return e;\n    }\n  }, {\n    key: \"createMovieClip\",\n    value: function createMovieClip(t, e, s) {\n      var r = t.createEmptyMovieClip(e, s);\n      this.make();\n      for (var _t8 = 0; _t8 < this.modules.length; _t8++) {\n        var _e7 = 1 * _t8;\n        for (var _s10 = 0; _s10 < this.modules[_t8].length; _s10++) {\n          var _o7 = 1 * _s10;\n          this.modules[_t8][_s10] && (r.beginFill(0, 100), r.moveTo(_o7, _e7), r.lineTo(_o7 + 1, _e7), r.lineTo(_o7 + 1, _e7 + 1), r.lineTo(_o7, _e7 + 1), r.endFill());\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"setupTimingPattern\",\n    value: function setupTimingPattern() {\n      for (var _t9 = 8; _t9 < this.moduleCount - 8; _t9++) null == this.modules[_t9][6] && (this.modules[_t9][6] = _t9 % 2 == 0);\n      for (var _t10 = 8; _t10 < this.moduleCount - 8; _t10++) null == this.modules[6][_t10] && (this.modules[6][_t10] = _t10 % 2 == 0);\n    }\n  }, {\n    key: \"setupPositionAdjustPattern\",\n    value: function setupPositionAdjustPattern() {\n      var t = a[this.typeNumber - 1];\n      for (var _e8 = 0; _e8 < t.length; _e8++) for (var _s11 = 0; _s11 < t.length; _s11++) {\n        var _r9 = t[_e8],\n          _o8 = t[_s11];\n        if (null == this.modules[_r9][_o8]) for (var _t11 = -2; _t11 <= 2; _t11++) for (var _e9 = -2; _e9 <= 2; _e9++) this.modules[_r9 + _t11][_o8 + _e9] = -2 === _t11 || 2 === _t11 || -2 === _e9 || 2 === _e9 || 0 === _t11 && 0 === _e9;\n      }\n    }\n  }, {\n    key: \"setupTypeNumber\",\n    value: function setupTypeNumber(t) {\n      var e = function (t) {\n        var e = t << 12;\n        for (; c(e) - c(7973) >= 0;) e ^= 7973 << c(e) - c(7973);\n        return t << 12 | e;\n      }(this.typeNumber);\n      for (var _s12 = 0; _s12 < 18; _s12++) this.modules[Math.floor(_s12 / 3)][_s12 % 3 + this.moduleCount - 8 - 3] = !t && 1 == (e >> _s12 & 1);\n      for (var _s13 = 0; _s13 < 18; _s13++) this.modules[_s13 % 3 + this.moduleCount - 8 - 3][Math.floor(_s13 / 3)] = !t && 1 == (e >> _s13 & 1);\n    }\n  }, {\n    key: \"setupTypeInfo\",\n    value: function setupTypeInfo(t, e) {\n      var s = function (t) {\n        var e = t << 10;\n        for (; c(e) - c(1335) >= 0;) e ^= 1335 << c(e) - c(1335);\n        return 21522 ^ (t << 10 | e);\n      }(this.errorCorrectLevel << 3 | e);\n      for (var _e10 = 0; _e10 < 15; _e10++) {\n        var _r10 = !t && 1 == (s >> _e10 & 1);\n        _e10 < 6 ? this.modules[_e10][8] = _r10 : _e10 < 8 ? this.modules[_e10 + 1][8] = _r10 : this.modules[this.moduleCount - 15 + _e10][8] = _r10;\n      }\n      for (var _e11 = 0; _e11 < 15; _e11++) {\n        var _r11 = !t && 1 == (s >> _e11 & 1);\n        _e11 < 8 ? this.modules[8][this.moduleCount - _e11 - 1] = _r11 : _e11 < 9 ? this.modules[8][15 - _e11 - 1 + 1] = _r11 : this.modules[8][15 - _e11 - 1] = _r11;\n      }\n      this.modules[this.moduleCount - 8][8] = !t;\n    }\n  }, {\n    key: \"mapData\",\n    value: function mapData(t, e) {\n      var s = -1,\n        r = this.moduleCount - 1,\n        o = 7,\n        n = 0;\n      for (var _i3 = this.moduleCount - 1; _i3 > 0; _i3 -= 2) for (6 === _i3 && _i3--;;) {\n        for (var _s14 = 0; _s14 < 2; _s14++) if (null == this.modules[r][_i3 - _s14]) {\n          var _h2 = !1;\n          n < t.length && (_h2 = 1 == (t[n] >>> o & 1)), u(e, r, _i3 - _s14) && (_h2 = !_h2), this.modules[r][_i3 - _s14] = _h2, o--, -1 === o && (n++, o = 7);\n        }\n        if (r += s, r < 0 || this.moduleCount <= r) {\n          r -= s, s = -s;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"createData\",\n    value: function createData(t, e, o) {\n      var n = s.getRSBlocks(t, e),\n        i = new r();\n      for (var _e12 = 0; _e12 < o.length; _e12++) {\n        var _s15 = o[_e12];\n        i.put(_s15.mode, 4), i.put(_s15.getLength(), p(_s15.mode, t)), _s15.write(i);\n      }\n      var h = 0;\n      for (var _t12 = 0; _t12 < n.length; _t12++) h += n[_t12].dataCount;\n      if (i.getLengthInBits() > 8 * h) throw new Error(\"code length overflow. (\" + i.getLengthInBits() + \">\" + 8 * h + \")\");\n      for (i.getLengthInBits() + 4 <= 8 * h && i.put(0, 4); i.getLengthInBits() % 8 != 0;) i.putBit(!1);\n      for (; !(i.getLengthInBits() >= 8 * h || (i.put(236, 8), i.getLengthInBits() >= 8 * h));) i.put(17, 8);\n      return this.createBytes(i, n);\n    }\n  }, {\n    key: \"createBytes\",\n    value: function createBytes(t, e) {\n      var s = 0,\n        r = 0,\n        o = 0;\n      var n = new Array(e.length),\n        i = new Array(e.length);\n      for (var _h3 = 0; _h3 < e.length; _h3++) {\n        var _a = e[_h3].dataCount,\n          _c = e[_h3].totalCount - _a;\n        r = Math.max(r, _a), o = Math.max(o, _c), n[_h3] = new Array(_a);\n        for (var _e13 = 0; _e13 < n[_h3].length; _e13++) n[_h3][_e13] = 255 & t.buffer[_e13 + s];\n        s += _a;\n        var _u = d(_c),\n          _p = new l(n[_h3], _u.getLength() - 1).mod(_u);\n        i[_h3] = new Array(_u.getLength() - 1);\n        for (var _t13 = 0; _t13 < i[_h3].length; _t13++) {\n          var _e14 = _t13 + _p.getLength() - i[_h3].length;\n          i[_h3][_t13] = _e14 >= 0 ? _p.get(_e14) : 0;\n        }\n      }\n      var h = 0;\n      for (var _t14 = 0; _t14 < e.length; _t14++) h += e[_t14].totalCount;\n      var a = new Array(h);\n      var c = 0;\n      for (var _t15 = 0; _t15 < r; _t15++) for (var _s16 = 0; _s16 < e.length; _s16++) _t15 < n[_s16].length && (a[c++] = n[_s16][_t15]);\n      for (var _t16 = 0; _t16 < o; _t16++) for (var _s17 = 0; _s17 < e.length; _s17++) _t16 < i[_s17].length && (a[c++] = i[_s17][_t16]);\n      return a;\n    }\n  }]);\n  return g;\n}();\nvar m = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]],\n  $ = function $(t, e, s) {\n    return (t = t[(e = Array.isArray(e) ? e : e.split(\".\"))[0]]) && e.length > 1 ? $(t, e.slice(1)) : void 0 === t ? s : t;\n  },\n  w = function w(t) {\n    var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return Math.round(t * e) / e;\n  },\n  C = [[-1, 0], [0, -1], [1, 0], [0, 1]],\n  k = [[[0, 0], [0, 1]], [[0, 0], [1, 0]], [[1, 0], [1, 1]], [[0, 1], [1, 1]]];\nvar y = /*#__PURE__*/function () {\n  function y(t) {\n    _classCallCheck(this, y);\n    this.options = {\n      ecl: \"M\",\n      content: \"\"\n    }, this.qrcode = void 0;\n    for (var _e15 in t) this.options[_e15] = t[_e15];\n    if (0 === this.options.content.length) throw new Error(\"Expected 'content' to be non-empty!\");\n    var e = this.options.content,\n      s = this.getTypeNumber(e, this.options.ecl),\n      r = this.getErrorCorrectLevel(this.options.ecl);\n    this.qrcode = new g(s, r), this.qrcode.addData(e), this.qrcode.make();\n  }\n  _createClass(y, [{\n    key: \"getErrorCorrectLevel\",\n    value: function getErrorCorrectLevel(t) {\n      var s = e[t];\n      if (null == s) throw new Error(\"Unknwon error correction level: \" + t);\n      return s;\n    }\n  }, {\n    key: \"getTypeNumber\",\n    value: function getTypeNumber(t, e) {\n      var s = function (t) {\n        var e = encodeURI(t).toString().replace(/%[0-9a-fA-F]{2}/g, \"a\");\n        return e.length + (e.length !== t ? 3 : 0);\n      }(t);\n      var r = 1,\n        o = 0,\n        n = 0;\n      var i = m.length;\n      for (; n <= i; n++) {\n        var _t17 = m[n];\n        if (!_t17) throw new Error(\"Content too long: expected \" + o + \" but got \" + s);\n        switch (e) {\n          case \"L\":\n            o = _t17[0];\n            break;\n          case \"M\":\n            o = _t17[1];\n            break;\n          case \"Q\":\n            o = _t17[2];\n            break;\n          case \"H\":\n            o = _t17[3];\n            break;\n          default:\n            throw new Error(\"Unknwon error correction level: \" + e);\n        }\n        if (s <= o) break;\n        r++;\n      }\n      if (r > m.length) throw new Error(\"Content too long\");\n      return r;\n    }\n  }, {\n    key: \"emptyCenter\",\n    value: function emptyCenter(t, e) {\n      var s = this.size,\n        r = s / 2,\n        o = t / 2,\n        n = (e = e || t) / 2;\n      for (var _t18 = 0; _t18 < s; _t18++) for (var _e16 = 0; _e16 < s; _e16++) _t18 >= r - n && _t18 < r + n && _e16 >= r - o && _e16 < r + o && (this.matrix[_t18][_e16] = !1);\n    }\n  }, {\n    key: \"matrix\",\n    get: function get() {\n      return this.qrcode.modules;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.qrcode.moduleCount;\n    }\n  }]);\n  return y;\n}();\nvar L = function L(t, e, s) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  r.push(e);\n  var _loop = function _loop() {\n    var o = _C[_i4];\n    var n = {\n      x: e.x + o[0],\n      y: e.y + o[1]\n    };\n    if (!r.find(function (t) {\n      return t.x === n.x && t.y === n.y;\n    })) {\n      var _e17 = $(t, [n.y, n.x]);\n      _e17 && _e17.pride === s && L(t, _e17, _e17.pride, r);\n    }\n  };\n  for (var _i4 = 0, _C = C; _i4 < _C.length; _i4++) {\n    _loop();\n  }\n};\nvar b = /*#__PURE__*/function () {\n  function b(t, e) {\n    _classCallCheck(this, b);\n    this.options = {\n      size: 0,\n      radiusFactor: .75,\n      roundOuterCorners: !0,\n      roundInnerCorners: !0,\n      cornerBlocksAsCircles: !1,\n      fill: \"currentColor\"\n    }, this.matrix = void 0, this.paths = [], this.matrixSize = void 0, this.lines = {}, this.lastUniqId = 0, this.pointSize = void 0;\n    for (var _t19 in e) this.options[_t19] = e[_t19];\n    if (void 0 === this.options.cornerBlockRadiusFactor && (this.options.cornerBlockRadiusFactor = this.options.radiusFactor), !(this.options.size > 0)) throw new Error(\"Expected 'size' value to be higher than zero!\");\n    this.matrixSize = t.size, this.pointSize = this.options.size / this.matrixSize, this.matrix = function () {\n      var e = [];\n      return t.matrix.forEach(function (t, s) {\n        e[s] = [], t.forEach(function (t, r) {\n          e[s][r] = {\n            pride: t ? 1 : 0,\n            x: r,\n            y: s,\n            blockId: void 0,\n            isCornerBlock: !1\n          };\n        });\n      }), e;\n    }(), this.detectBlocks(), this.detectLines(), this.generatePaths();\n  }\n  _createClass(b, [{\n    key: \"detectBlocks\",\n    value: function detectBlocks() {\n      var _this = this;\n      var t = this.matrixSize,\n        e = this.matrix;\n      for (var _s18 = 0; _s18 < t; _s18++) {\n        var _loop2 = function _loop2() {\n          var t = e[_s18][_r12];\n          if (void 0 === t.blockId && 1 === t.pride) {\n            var _s19 = [];\n            L(e, t, 1, _s19);\n            var _r13 = _this.getUniqId();\n            _s19.forEach(function (t) {\n              var e = t.x,\n                s = t.y;\n              t.blockId = _r13, (e < 8 && s < 8 || e > _this.matrixSize - 8 && s < 8 || e < 8 && s > _this.matrixSize - 8) && (t.isCornerBlock = !0);\n            });\n          }\n        };\n        for (var _r12 = 0; _r12 < t; _r12++) {\n          _loop2();\n        }\n      }\n    }\n  }, {\n    key: \"detectLines\",\n    value: function detectLines() {\n      var _this2 = this;\n      var t = this.lines,\n        e = this.matrixSize,\n        s = this.matrix,\n        r = this.pointSize / 2 * Math.min(this.options.radiusFactor, 10),\n        o = this.pointSize / 2 * Math.min(this.options.cornerBlockRadiusFactor, 10);\n      var _loop3 = function _loop3(_n2) {\n        var _loop4 = function _loop4(_i5) {\n          var e = s[_n2][_i5];\n          void 0 !== e.blockId && (e.isCornerBlock && _this2.options.cornerBlocksAsCircles || C.forEach(function (h, l) {\n            var a = $(s, [_n2 + h[0], _i5 + h[1]]);\n            a && a.blockId === e.blockId || e.blockId && (t[e.blockId] = t[e.blockId] || [], t[e.blockId].push({\n              processed: !1,\n              p1: {\n                y: _n2 + k[l][0][0],\n                x: _i5 + k[l][0][1]\n              },\n              p2: {\n                y: _n2 + k[l][1][0],\n                x: _i5 + k[l][1][1]\n              },\n              cell: e,\n              cr: e.isCornerBlock ? o : r\n            }));\n          }));\n        };\n        for (var _i5 = 0; _i5 < e; _i5++) {\n          _loop4(_i5);\n        }\n      };\n      for (var _n2 = 0; _n2 < e; _n2++) {\n        _loop3(_n2);\n      }\n      Object.keys(t).forEach(function (e) {\n        var s = t[e],\n          r = function r(t, e, o, n) {\n            var i = s.filter(function (s) {\n              return !s.processed && (s.p1.y === t && s.p1.x === e || s.p2.y === t && s.p2.x === e);\n            }).sort(function (t, e) {\n              return t.cell === n ? -1 : 1;\n            })[0];\n            if (i) {\n              var _s20;\n              i.processed = !0, i.p1.y === t && i.p1.x === e ? _s20 = {\n                p1: i.p1,\n                p2: i.p2,\n                cr: i.cr\n              } : i.p2.y === t && i.p2.x === e && (_s20 = {\n                p1: i.p2,\n                p2: i.p1,\n                cr: i.cr\n              }), o.push(_s20), r(_s20.p2.y, _s20.p2.x, o, i.cell);\n            }\n          };\n        s[0].processed = !0;\n        var o = [s[0]];\n        r(s[0].p2.y, s[0].p2.x, o, s[0].cell), t[e] = o, t[e].crops = [];\n        var n = !0;\n        for (; n;) {\n          var _o9 = s.find(function (t) {\n            return !t.processed;\n          });\n          if (_o9) {\n            var i, h;\n            _o9.processed = !0;\n            var _s21 = [_o9];\n            r(_o9.p2.y, _o9.p2.x, _s21, _o9.cell), _s21.reverse(), _s21.map(function (t) {\n              var e = t.p2;\n              return t.p2 = t.p1, t.p1 = e, t;\n            }), null == (i = t[e]) || null == (h = i.crops) || h.push(_s21);\n          } else n = !1;\n        }\n      });\n    }\n  }, {\n    key: \"getDir\",\n    value: function getDir(t) {\n      return t.p1.x === t.p2.x ? t.p1.y > t.p2.y ? \"sn\" : \"ns\" : t.p1.y === t.p2.y ? t.p1.x > t.p2.x ? \"ew\" : \"we\" : void 0;\n    }\n  }, {\n    key: \"getSubPath\",\n    value: function getSubPath(t, e, s, r) {\n      var o = this.pointSize;\n      var _t$p = t.p1,\n        n = _t$p.x,\n        i = _t$p.y,\n        h = t.cr;\n      n *= o, i *= o;\n      var l = w(n - h),\n        a = w(n + h),\n        c = w(i - h),\n        u = w(i + h);\n      n = w(n), i = w(i);\n      var d = this.getDir(t),\n        p = this.getDir(e);\n      var f = \"\";\n      return h && s && \"we\" === p && \"ns\" === d ? (f += \"L\".concat(l, \" \").concat(i, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(n, \" \").concat(u)) : h && s && \"ns\" === p && \"ew\" === d ? (f += \"L\".concat(n, \" \").concat(c, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(l, \" \").concat(i)) : h && s && \"ew\" === p && \"sn\" === d ? (f += \"L\".concat(a, \" \").concat(i, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(n, \" \").concat(c)) : h && s && \"sn\" === p && \"we\" === d ? (f += \"L\".concat(n, \" \").concat(u, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(a, \" \").concat(i)) : h && r && \"sn\" === p && \"ew\" === d ? (f += \"L\".concat(n, \" \").concat(u, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(l, \" \").concat(i)) : h && r && \"ew\" === p && \"ns\" === d ? (f += \"L\".concat(a, \" \").concat(i, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(n, \" \").concat(u)) : h && r && \"ns\" === p && \"we\" === d ? (f += \"L\".concat(n, \" \").concat(c, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(a, \" \").concat(i)) : h && r && \"we\" === p && \"sn\" === d ? (f += \"L\".concat(l, \" \").concat(i, \" \"), f += \"Q\".concat(n, \" \").concat(i, \" \").concat(n, \" \").concat(c)) : f += \"L\".concat(n, \" \").concat(i, \" \"), f;\n    }\n  }, {\n    key: \"getUniqId\",\n    value: function getUniqId() {\n      return String(this.lastUniqId++);\n    }\n  }, {\n    key: \"generatePaths\",\n    value: function generatePaths() {\n      var _this3 = this;\n      var t = this.pointSize,\n        _this$options = this.options,\n        e = _this$options.roundOuterCorners,\n        s = _this$options.roundInnerCorners,\n        r = _this$options.cornerBlocksAsCircles,\n        o = this.lines,\n        n = [];\n      if (Object.keys(o).forEach(function (r) {\n        var i = \"\";\n        var _iterator = _createForOfIteratorHelper([o[r]].concat(_toConsumableArray(o[r].crops)).entries()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              _n3 = _step$value[0],\n              _h4 = _step$value[1];\n            var _iterator2 = _createForOfIteratorHelper(_h4.entries()),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                  _r14 = _step2$value[0],\n                  _o10 = _step2$value[1];\n                var _o10$p = _o10.p1,\n                  _l = _o10$p.x,\n                  _a2 = _o10$p.y,\n                  _c2 = _o10.cr;\n                _l *= t, _a2 *= t;\n                var _u2 = w(_l + _c2),\n                  _d = w(_a2 + _c2);\n                _l = w(_l), _a2 = w(_a2);\n                var _p2 = _h4[_r14 - 1] || _h4[_h4.length - 1],\n                  _f = _h4[_r14 + 1] || _h4[0],\n                  _g = _this3.getDir(_o10),\n                  _m = _this3.getDir(_p2);\n                0 === _r14 ? i += e ? 0 === _n3 ? \"M\".concat(_u2, \" \").concat(_a2, \" \") : \"M\".concat(_l, \" \").concat(_d, \" \") : \"M\".concat(_l, \" \").concat(_a2, \" \") : _r14 === _h4.length - 1 ? (i += _this3.getSubPath(_o10, _p2, e, s), i += _this3.getSubPath(_f, _o10, e, s), i += \"Z\") : _m !== _g && (i += _this3.getSubPath(_o10, _p2, e, s));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        n.push(\"<path d=\\\"\".concat(i, \"\\\"/>\"));\n      }), r) {\n        var _t20 = this.pointSize * this.matrixSize - 7 * this.pointSize;\n        [[0, 0], [_t20, 0], [0, _t20]].forEach(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n            t = _ref4[0],\n            e = _ref4[1];\n          var s = w(7 * _this3.pointSize / 2 + t),\n            r = w(7 * _this3.pointSize / 2 + e);\n          var o = w(7 * _this3.pointSize / 2);\n          var i = w(7 * _this3.pointSize / 2 - _this3.pointSize);\n          n.push(\"<path d=\\\"M \".concat(s, \" \").concat(r - o, \" A \").concat(o, \" \").concat(o, \" 0 1 0 \").concat(s, \" \").concat(w(r + o), \" A \").concat(o, \" \").concat(o, \" 0 1 0 \").concat(s, \" \").concat(w(r - o), \" Z M \").concat(s, \" \").concat(r - i, \" A \").concat(i, \" \").concat(i, \" 0 1 1 \").concat(s, \" \").concat(w(r + i), \" A \").concat(i, \" \").concat(i, \" 0 1 1 \").concat(s, \" \").concat(w(r - i), \" Z\\\" />\")), o = w(7 * _this3.pointSize / 2 - 2 * _this3.pointSize), n.push(\"<path d=\\\"M \".concat(s, \" \").concat(r - o, \" A \").concat(o, \" \").concat(o, \" 0 1 0 \").concat(s, \" \").concat(w(r + o), \" A \").concat(o, \" \").concat(o, \" 0 1 0 \").concat(s, \" \").concat(w(r - o), \" Z\\\" />\"));\n        });\n      }\n      this.paths = n;\n    }\n  }, {\n    key: \"svgAdditionalContent\",\n    value: function svgAdditionalContent(t) {\n      return \"function\" == typeof t ? t(this) : \"string\" == typeof t ? t : t || \"\";\n    }\n  }, {\n    key: \"svg\",\n    get: function get() {\n      var _this$options2 = this.options,\n        t = _this$options2.size,\n        e = _this$options2.fill;\n      return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 \".concat(t, \" \").concat(t, \"\\\" width=\\\"\").concat(t, \"\\\" height=\\\"\").concat(t, \"\\\" fill=\\\"\").concat(e, \"\\\">\\n\").concat(this.svgAdditionalContent(this.options.preContent), \"\\n\").concat(this.paths.join(\"\\n\"), \"\\n\").concat(this.svgAdditionalContent(this.options.postContent), \"\\n</svg>\");\n    }\n  }]);\n  return b;\n}();\nexport { y as QRCode, b as QRSvg };","map":{"version":3,"names":["t","_classCallCheck","mode","data","parsedData","e","s","length","charCodeAt","push","Array","prototype","concat","apply","unshift","_createClass","key","value","getLength","write","put","L","M","Q","H","totalCount","dataCount","getRSBlocks","r","getRsBlockTable","Error","o","n","i","RS_BLOCK_TABLE","buffer","get","Math","floor","putBit","getLengthInBits","_ref","_ref2","_slicedToArray","h","l","num","multiply","mod","a","c","u","d","p","f","getModuleCount","isDark","abs","g","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","addData","make","makeImpl","getBestMaskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","createMovieClip","createEmptyMovieClip","beginFill","moveTo","lineTo","endFill","createBytes","max","m","$","isArray","split","slice","w","arguments","undefined","round","C","k","y","options","ecl","content","qrcode","getTypeNumber","getErrorCorrectLevel","encodeURI","toString","replace","emptyCenter","size","matrix","_loop","_C","_i4","x","find","pride","b","radiusFactor","roundOuterCorners","roundInnerCorners","cornerBlocksAsCircles","fill","paths","matrixSize","lines","lastUniqId","pointSize","cornerBlockRadiusFactor","forEach","blockId","isCornerBlock","detectBlocks","detectLines","generatePaths","_this","_loop2","getUniqId","_this2","min","_loop3","_n2","_loop4","_i5","processed","p1","p2","cell","cr","Object","keys","filter","sort","crops","reverse","map","getDir","getSubPath","_t$p","String","_this3","_this$options","_iterator","_createForOfIteratorHelper","_toConsumableArray","entries","_step","done","_step$value","_iterator2","_step2","_step2$value","_o10$p","err","_ref3","_ref4","svgAdditionalContent","_this$options2","preContent","join","postContent","QRCode","QRSvg"],"sources":["/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QR8bitByte.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRMode.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRErrorCorrectLevel.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRRSBlock.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRBitBuffer.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRMath.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRPolynomial.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRUtil.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRMaskPattern.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRCodeModel.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRCodeLimitLength.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/utils.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRCode.ts","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/node_modules/sexy-qr/src/QRSvg.ts"],"sourcesContent":["import { QRMode } from './QRMode';\n\nexport class QR8bitByte {\n  mode = QRMode.MODE_8BIT_BYTE;\n\n  data: string;\n\n  parsedData: (number[] | number)[] = [];\n\n  constructor(data) {\n    this.data = data;\n\n    // Added to support UTF-8 Characters\n    let i = 0;\n    const l = this.data.length;\n    for (; i < l; i++) {\n      const code = this.data.charCodeAt(i);\n\n      let byteArray: number[];\n      if (code > 0x10000) {\n        // prettier-ignore\n        byteArray = [\n          0xf0 | ((code & 0x1c0000) >>> 18),\n          0x80 | ((code & 0x3f000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ];\n      } else if (code > 0x800) {\n        // prettier-ignore\n        byteArray = [\n          0xe0 | ((code & 0xf000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else if (code > 0x80) {\n        // prettier-ignore\n        byteArray = [\n          0xc0 | ((code & 0x7c0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else {\n        byteArray = [code];\n      }\n\n      this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length !== this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  getLength() {\n    return this.parsedData.length;\n  }\n\n  write(buffer) {\n    let i = 0;\n    const l = this.parsedData.length;\n    for (; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n}\n","export const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n};\n\nexport type QRMode = typeof QRMode[keyof typeof QRMode];\n","export const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n};\n\nexport type QRErrorCorrectLevel = typeof QRErrorCorrectLevel[keyof typeof QRErrorCorrectLevel];\n","import { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\n\nexport class QRRSBlock {\n  totalCount!: number;\n  dataCount!: number;\n\n  constructor(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  static RS_BLOCK_TABLE = [\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n  ];\n\n  static getRSBlocks(typeNumber, errorCorrectLevel) {\n    const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock === undefined) {\n      throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n    }\n    const length = rsBlock.length / 3;\n    const list: QRRSBlock[] = [];\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n      for (let j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n    return list;\n  }\n\n  static getRsBlockTable(typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case QRErrorCorrectLevel.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4];\n      case QRErrorCorrectLevel.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectLevel.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectLevel.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default:\n        return undefined;\n    }\n  }\n}\n","export class QRBitBuffer {\n  buffer: number[] = [];\n\n  length = 0;\n\n  constructor() {}\n\n  get(index) {\n    const bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) === 1;\n  }\n\n  put(num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  getLengthInBits() {\n    return this.length;\n  }\n\n  putBit(bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n}\n","export const [EXP_TABLE, LOG_TABLE] = (() => {\n  const EXP_TABLE = new Array(256);\n  const LOG_TABLE = new Array(256);\n\n  for (let i = 0; i < 8; i++) {\n    EXP_TABLE[i] = 1 << i;\n  }\n  for (let i = 8; i < 256; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n  }\n  for (let i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n  }\n\n  return [EXP_TABLE, LOG_TABLE];\n})();\n\nexport const glog = (n) => {\n  if (n < 1) {\n    throw new Error('glog(' + n + ')');\n  }\n  return LOG_TABLE[n];\n};\n\nexport const gexp = (n) => {\n  while (n < 0) {\n    n += 255;\n  }\n  while (n >= 256) {\n    n -= 255;\n  }\n  return EXP_TABLE[n];\n};\n","import * as QRMath from './QRMath';\n\nexport class QRPolynomial {\n  num: number[];\n\n  constructor(num, shift) {\n    if (num.length === undefined) {\n      throw new Error(num.length + '/' + shift);\n    }\n    let offset = 0;\n    while (offset < num.length && num[offset] === 0) {\n      offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (let i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  get(index) {\n    return this.num[index];\n  }\n\n  getLength() {\n    return this.num.length;\n  }\n\n  multiply(e) {\n    const num = new Array(this.getLength() + e.getLength() - 1);\n    for (let i = 0; i < this.getLength(); i++) {\n      for (let j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  }\n\n  mod(e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    const num = new Array(this.getLength());\n    for (let i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (let i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  }\n}\n","import { QRMaskPattern } from './QRMaskPattern';\nimport { QRPolynomial } from './QRPolynomial';\nimport { QRMode } from './QRMode';\nimport * as QRMath from './QRMath';\n\nexport const PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\n\nexport const G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\nexport const G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n\nexport const G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\nexport const getBCHDigit = (data) => {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\n\nexport const getBCHTypeInfo = (data) => {\n  let d = data << 10;\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= G15 << (getBCHDigit(d) - getBCHDigit(G15));\n  }\n  return ((data << 10) | d) ^ G15_MASK;\n};\n\nexport const getBCHTypeNumber = (data) => {\n  let d = data << 12;\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= G18 << (getBCHDigit(d) - getBCHDigit(G18));\n  }\n  return (data << 12) | d;\n};\n\nexport const getPatternPosition = (typeNumber) => {\n  return PATTERN_POSITION_TABLE[typeNumber - 1];\n};\n\nexport const getMask = (maskPattern, i, j) => {\n  switch (maskPattern) {\n    case QRMaskPattern.PATTERN000:\n      return (i + j) % 2 === 0;\n    case QRMaskPattern.PATTERN001:\n      return i % 2 === 0;\n    case QRMaskPattern.PATTERN010:\n      return j % 3 === 0;\n    case QRMaskPattern.PATTERN011:\n      return (i + j) % 3 === 0;\n    case QRMaskPattern.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN101:\n      return ((i * j) % 2) + ((i * j) % 3) === 0;\n    case QRMaskPattern.PATTERN110:\n      return (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN111:\n      return (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n};\n\nexport const getErrorCorrectPolynomial = (errorCorrectLength) => {\n  let a = new QRPolynomial([1], 0);\n  for (let i = 0; i < errorCorrectLength; i++) {\n    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n  }\n  return a;\n};\n\nexport const getLengthInBits = (mode, type) => {\n  if (1 <= type && type < 10) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 10;\n      case QRMode.MODE_ALPHA_NUM:\n        return 9;\n      case QRMode.MODE_8BIT_BYTE:\n        return 8;\n      case QRMode.MODE_KANJI:\n        return 8;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 27) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 12;\n      case QRMode.MODE_ALPHA_NUM:\n        return 11;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 10;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 41) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 14;\n      case QRMode.MODE_ALPHA_NUM:\n        return 13;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 12;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else {\n    throw new Error('type:' + type);\n  }\n};\n\nexport const getLostPoint = (qrCode) => {\n  const moduleCount = qrCode.getModuleCount();\n  let lostPoint = 0;\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount; col++) {\n      let sameCount = 0;\n      const dark = qrCode.isDark(row, col);\n      for (let r = -1; r <= 1; r++) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue;\n        }\n        for (let c = -1; c <= 1; c++) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue;\n          }\n          if (r === 0 && c === 0) {\n            continue;\n          }\n          if (dark === qrCode.isDark(row + r, col + c)) {\n            sameCount++;\n          }\n        }\n      }\n      if (sameCount > 5) {\n        lostPoint += 3 + sameCount - 5;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount - 1; row++) {\n    for (let col = 0; col < moduleCount - 1; col++) {\n      let count = 0;\n      if (qrCode.isDark(row, col)) count++;\n      if (qrCode.isDark(row + 1, col)) count++;\n      if (qrCode.isDark(row, col + 1)) count++;\n      if (qrCode.isDark(row + 1, col + 1)) count++;\n      if (count === 0 || count === 4) {\n        lostPoint += 3;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount - 6; col++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row, col + 1) &&\n        qrCode.isDark(row, col + 2) &&\n        qrCode.isDark(row, col + 3) &&\n        qrCode.isDark(row, col + 4) &&\n        !qrCode.isDark(row, col + 5) &&\n        qrCode.isDark(row, col + 6)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount - 6; row++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row + 1, col) &&\n        qrCode.isDark(row + 2, col) &&\n        qrCode.isDark(row + 3, col) &&\n        qrCode.isDark(row + 4, col) &&\n        !qrCode.isDark(row + 5, col) &&\n        qrCode.isDark(row + 6, col)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  let darkCount = 0;\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount; row++) {\n      if (qrCode.isDark(row, col)) {\n        darkCount++;\n      }\n    }\n  }\n  const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n  lostPoint += ratio * 10;\n  return lostPoint;\n};\n","export const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n};\n\nexport type QRMaskPattern = typeof QRMaskPattern[keyof typeof QRMaskPattern];\n","import { QR8bitByte } from './QR8bitByte';\nimport { QRRSBlock } from './QRRSBlock';\nimport { QRBitBuffer } from './QRBitBuffer';\nimport { QRPolynomial } from './QRPolynomial';\nimport * as QRUtil from './QRUtil';\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\nexport class QRCodeModel {\n  typeNumber!: number;\n  errorCorrectLevel!: number;\n  modules: (boolean | null)[][] = [];\n  moduleCount = 0;\n  dataCache: number[] | null = null;\n  dataList: QR8bitByte[] = [];\n\n  constructor(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n  }\n\n  addData(data) {\n    const newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  }\n\n  isDark(row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col);\n    }\n    return this.modules[row][col];\n  }\n\n  getModuleCount() {\n    return this.moduleCount;\n  }\n\n  make() {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n\n  makeImpl(test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  setupPositionProbePattern(row, col) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        this.modules[row + r][col + c] =\n          (0 <= r && r <= 6 && (c === 0 || c === 6)) ||\n          (0 <= c && c <= 6 && (r === 0 || r === 6)) ||\n          (2 <= r && r <= 4 && 2 <= c && c <= 4);\n      }\n    }\n  }\n\n  getBestMaskPattern() {\n    let minLostPoint = 0;\n    let pattern = 0;\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      const lostPoint = QRUtil.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  }\n\n  createMovieClip(target_mc, instance_name, depth) {\n    const qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    const cs = 1;\n    this.make();\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs;\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs;\n        const dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  }\n\n  setupTimingPattern() {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 === 0;\n    }\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  setupPositionAdjustPattern() {\n    const pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  setupTypeNumber(test) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (let i = 0; i < 18; i++) {\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = !test && ((bits >> i) & 1) === 1;\n    }\n    for (let i = 0; i < 18; i++) {\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = !test && ((bits >> i) & 1) === 1;\n    }\n  }\n\n  setupTypeInfo(test, maskPattern) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern;\n    const bits = QRUtil.getBCHTypeInfo(data);\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = !test;\n  }\n\n  mapData(data, maskPattern) {\n    let inc = -1;\n    let row = this.moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false;\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  createData(typeNumber, errorCorrectLevel, dataList) {\n    const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new QRBitBuffer();\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    }\n    while (buffer.getLengthInBits() % 8 !== 0) {\n      buffer.putBit(false);\n    }\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  createBytes(buffer, rsBlocks) {\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n    const dcdata = new Array(rsBlocks.length);\n    const ecdata = new Array(rsBlocks.length);\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n      for (let i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n      offset += dcCount;\n      const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n    const data = new Array(totalCodeCount);\n    let index = 0;\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n    return data;\n  }\n}\n","export const QRCodeLimitLength = [\n  [17, 14, 11, 7],\n  [32, 26, 20, 14],\n  [53, 42, 32, 24],\n  [78, 62, 46, 34],\n  [106, 84, 60, 44],\n  [134, 106, 74, 58],\n  [154, 122, 86, 64],\n  [192, 152, 108, 84],\n  [230, 180, 130, 98],\n  [271, 213, 151, 119],\n  [321, 251, 177, 137],\n  [367, 287, 203, 155],\n  [425, 331, 241, 177],\n  [458, 362, 258, 194],\n  [520, 412, 292, 220],\n  [586, 450, 322, 250],\n  [644, 504, 364, 280],\n  [718, 560, 394, 310],\n  [792, 624, 442, 338],\n  [858, 666, 482, 382],\n  [929, 711, 509, 403],\n  [1003, 779, 565, 439],\n  [1091, 857, 611, 461],\n  [1171, 911, 661, 511],\n  [1273, 997, 715, 535],\n  [1367, 1059, 751, 593],\n  [1465, 1125, 805, 625],\n  [1528, 1190, 868, 658],\n  [1628, 1264, 908, 698],\n  [1732, 1370, 982, 742],\n  [1840, 1452, 1030, 790],\n  [1952, 1538, 1112, 842],\n  [2068, 1628, 1168, 898],\n  [2188, 1722, 1228, 958],\n  [2303, 1809, 1283, 983],\n  [2431, 1911, 1351, 1051],\n  [2563, 1989, 1423, 1093],\n  [2699, 2099, 1499, 1139],\n  [2809, 2213, 1579, 1219],\n  [2953, 2331, 1663, 1273],\n];\n","export const getProp = (object, keys, defaultVal = undefined) => {\n  keys = Array.isArray(keys) ? keys : keys.split('.');\n  object = object[keys[0]];\n  if (object && keys.length > 1) {\n    return getProp(object, keys.slice(1));\n  }\n  return object === undefined ? defaultVal : object;\n};\n\nexport const round = (val: number, precision = 1e1) => {\n  return Math.round(val * precision) / precision;\n};\n\nexport const neighborOffsets = [\n  [-1, 0],\n  [0, -1],\n  [1, 0],\n  [0, 1],\n];\n\nexport const contour = [\n  [\n    [0, 0],\n    [0, 1],\n  ],\n  [\n    [0, 0],\n    [1, 0],\n  ],\n  [\n    [1, 0],\n    [1, 1],\n  ],\n  [\n    [0, 1],\n    [1, 1],\n  ],\n];\n\nexport const getUTF8Length = (content) => {\n  const result = encodeURI(content)\n    .toString()\n    .replace(/%[0-9a-fA-F]{2}/g, 'a');\n  return result.length + (result.length !== content ? 3 : 0);\n};\n","import { QRCodeModel } from './QRCodeModel';\nimport { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\nimport { QRCodeLimitLength } from './QRCodeLimitLength';\nimport { getUTF8Length } from './utils';\n\ntype QRCodeOptions = {\n  ecl: 'L' | 'M' | 'Q' | 'H';\n  content: string;\n};\n\nexport class QRCode {\n  options: QRCodeOptions = {\n    ecl: 'M',\n    content: '',\n  };\n\n  private readonly qrcode!: QRCodeModel;\n\n  constructor(options: Partial<QRCodeOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (this.options.content.length === 0) {\n      throw new Error(\"Expected 'content' to be non-empty!\");\n    }\n\n    const content = this.options.content;\n    const type = this.getTypeNumber(content, this.options.ecl);\n    const ecl = this.getErrorCorrectLevel(this.options.ecl);\n    this.qrcode = new QRCodeModel(type, ecl);\n    this.qrcode.addData(content);\n    this.qrcode.make();\n  }\n\n  private getErrorCorrectLevel(ecl) {\n    const result = QRErrorCorrectLevel[ecl];\n\n    if (result == undefined) {\n      throw new Error('Unknwon error correction level: ' + ecl);\n    }\n\n    return result;\n  }\n\n  private getTypeNumber(content, ecl) {\n    const length = getUTF8Length(content);\n\n    let type = 1;\n    let limit = 0;\n    let i = 0;\n    const len = QRCodeLimitLength.length;\n    for (; i <= len; i++) {\n      const table = QRCodeLimitLength[i];\n      if (!table) {\n        throw new Error('Content too long: expected ' + limit + ' but got ' + length);\n      }\n\n      switch (ecl) {\n        case 'L':\n          limit = table[0];\n          break;\n\n        case 'M':\n          limit = table[1];\n          break;\n\n        case 'Q':\n          limit = table[2];\n          break;\n\n        case 'H':\n          limit = table[3];\n          break;\n\n        default:\n          throw new Error('Unknwon error correction level: ' + ecl);\n      }\n\n      if (length <= limit) {\n        break;\n      }\n\n      type++;\n    }\n\n    if (type > QRCodeLimitLength.length) {\n      throw new Error('Content too long');\n    }\n\n    return type;\n  }\n\n  emptyCenter(emptySize: number, emptySizeHeight?: number) {\n    const { size } = this;\n\n    emptySizeHeight = emptySizeHeight || emptySize;\n\n    const halfSize = size / 2;\n    const halfEmptySize = emptySize / 2;\n    const halfEmptySizeHeight = emptySizeHeight / 2;\n\n    for (let y = 0; y < size; y++) {\n      for (let x = 0; x < size; x++) {\n        if (\n          y >= halfSize - halfEmptySizeHeight &&\n          y < halfSize + halfEmptySizeHeight &&\n          x >= halfSize - halfEmptySize &&\n          x < halfSize + halfEmptySize\n        ) {\n          this.matrix[y][x] = false;\n        }\n\n      }\n    }\n  }\n\n  get matrix() {\n    return this.qrcode.modules;\n  }\n\n  get size() {\n    return this.qrcode.moduleCount;\n  }\n}\n","import { getProp, round, neighborOffsets, contour } from './utils';\nimport { QRCode } from './QRCode';\n\ntype QRSvgOptions = {\n  size: number;\n  radiusFactor: number;\n  cornerBlockRadiusFactor?: number;\n  roundOuterCorners: boolean;\n  roundInnerCorners: boolean;\n  cornerBlocksAsCircles: boolean;\n  fill: string;\n  preContent?: string | ((QRSvg) => string);\n  postContent?: string | ((QRSvg) => string);\n};\n\ntype Pride = 1 | 0;\n\ntype Cell = {\n  pride: Pride;\n  x: number;\n  y: number;\n  blockId?: string;\n  isCornerBlock: boolean;\n};\n\ntype LineSegment = {\n  processed: boolean;\n  p1: { x: number; y: number };\n  p2: { x: number; y: number };\n  cell: Cell;\n  cr: number;\n};\n\ntype LineSegmentsWithCrops = LineSegment[] & { crops?: LineSegment[][] };\n\nconst findNeighbors = (matrix: Cell[][], cell: Cell, pride: Pride, expectCells: Cell[] = []) => {\n  expectCells.push(cell);\n\n  for (const offset of neighborOffsets) {\n    const neighborCoord = { x: cell.x + offset[0], y: cell.y + offset[1] };\n\n    if (!expectCells.find((i) => i.x === neighborCoord.x && i.y === neighborCoord.y)) {\n      const neighborCell = getProp(matrix, [neighborCoord.y, neighborCoord.x]);\n\n      if (neighborCell && neighborCell.pride === pride) {\n        const pride = neighborCell.pride;\n        findNeighbors(matrix, neighborCell, pride, expectCells);\n      }\n    }\n  }\n};\n\nexport class QRSvg {\n  private options: QRSvgOptions = {\n    size: 0,\n    radiusFactor: 0.75,\n    roundOuterCorners: true,\n    roundInnerCorners: true,\n    cornerBlocksAsCircles: false,\n    fill: 'currentColor',\n  };\n\n  private matrix!: Cell[][];\n\n  paths: string[] = [];\n\n  private readonly matrixSize!: number;\n\n  private lines: Record<string, LineSegmentsWithCrops> = {};\n\n  private lastUniqId = 0;\n\n  readonly pointSize!: number;\n\n  constructor(qrCode: QRCode, options: Partial<QRSvgOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (this.options.cornerBlockRadiusFactor === undefined) {\n      this.options.cornerBlockRadiusFactor = this.options.radiusFactor;\n    }\n\n    if (!(this.options.size > 0)) {\n      throw new Error(\"Expected 'size' value to be higher than zero!\");\n    }\n\n    this.matrixSize = qrCode.size;\n    this.pointSize = this.options.size / this.matrixSize;\n\n    this.matrix = (() => {\n      const result: Cell[][] = [];\n      qrCode.matrix.forEach((row, rowIdx) => {\n        result[rowIdx] = [];\n        row.forEach((val, idx) => {\n          result[rowIdx][idx] = {\n            pride: val ? 1 : 0,\n            x: idx,\n            y: rowIdx,\n            blockId: undefined,\n            isCornerBlock: false,\n          } as Cell;\n        });\n      });\n      return result;\n    })();\n\n    this.detectBlocks();\n    this.detectLines();\n    this.generatePaths();\n  }\n\n  private detectBlocks() {\n    const { matrixSize, matrix } = this;\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const currCell = matrix[y][x];\n        if (currCell.blockId === undefined && currCell.pride === 1) {\n          const cells: Cell[] = [];\n          findNeighbors(matrix, currCell, 1, cells);\n          const blockId = this.getUniqId();\n          cells.forEach((cell) => {\n            const { x, y } = cell;\n            cell.blockId = blockId;\n\n            if ((x < 8 && y < 8) || (x > this.matrixSize - 8 && y < 8) || (x < 8 && y > this.matrixSize - 8)) {\n              cell.isCornerBlock = true;\n            }\n          });\n        }\n      }\n    }\n  }\n\n  private detectLines() {\n    const { lines, matrixSize, matrix } = this;\n\n    const pathRadius = (this.pointSize / 2) * Math.min(this.options.radiusFactor, 10);\n    const cornerBlockPathRadius = (this.pointSize / 2) * Math.min(this.options.cornerBlockRadiusFactor as number, 10);\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const cell = matrix[y][x];\n        if (cell.blockId === undefined) {\n          continue;\n        }\n\n        if (cell.isCornerBlock && this.options.cornerBlocksAsCircles) {\n          continue;\n        }\n\n        neighborOffsets.forEach((offset, idx) => {\n          const neighborCell = getProp(matrix, [y + offset[0], x + offset[1]]);\n          if (!neighborCell || neighborCell.blockId !== cell.blockId) {\n            if (cell.blockId) {\n              lines[cell.blockId] = lines[cell.blockId] || [];\n              lines[cell.blockId].push({\n                processed: false,\n                p1: { y: y + contour[idx][0][0], x: x + contour[idx][0][1] },\n                p2: { y: y + contour[idx][1][0], x: x + contour[idx][1][1] },\n                cell,\n                cr: cell.isCornerBlock ? cornerBlockPathRadius : pathRadius,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    Object.keys(lines).forEach((key) => {\n      const line = lines[key];\n\n      const proc = (py, px, result, oCell) => {\n        const nextSegs = line\n          .filter((seg) => {\n            if (!seg.processed) {\n              if ((seg.p1.y === py && seg.p1.x === px) || (seg.p2.y === py && seg.p2.x === px)) {\n                return true;\n              }\n            }\n            return false;\n          })\n          .sort((a, b) => {\n            if (a.cell === oCell) {\n              return -1;\n            }\n            return 1;\n          });\n\n        const nextSeg = nextSegs[0];\n\n        if (nextSeg) {\n          nextSeg.processed = true;\n          let resultSeg;\n          if (nextSeg.p1.y === py && nextSeg.p1.x === px) {\n            resultSeg = { p1: nextSeg.p1, p2: nextSeg.p2, cr: nextSeg.cr };\n          } else if (nextSeg.p2.y === py && nextSeg.p2.x === px) {\n            resultSeg = { p1: nextSeg.p2, p2: nextSeg.p1, cr: nextSeg.cr };\n          }\n          result.push(resultSeg);\n          proc(resultSeg.p2.y, resultSeg.p2.x, result, nextSeg.cell);\n        }\n      };\n      line[0].processed = true;\n      const result: LineSegmentsWithCrops = [line[0]];\n      proc(line[0].p2.y, line[0].p2.x, result, line[0].cell);\n      lines[key] = result;\n      lines[key].crops = [];\n\n      let checkCrops = true;\n      while (checkCrops) {\n        const notProcessedSeg = line.find((i) => !i.processed);\n        if (notProcessedSeg) {\n          notProcessedSeg.processed = true;\n          const cropResult = [notProcessedSeg];\n          proc(notProcessedSeg.p2.y, notProcessedSeg.p2.x, cropResult, notProcessedSeg.cell);\n          cropResult.reverse();\n          cropResult.map((seg) => {\n            const op2 = seg.p2;\n            seg.p2 = seg.p1;\n            seg.p1 = op2;\n            return seg;\n          });\n          lines[key]?.crops?.push(cropResult);\n        } else {\n          checkCrops = false;\n        }\n      }\n    });\n  }\n\n  private getDir(seg) {\n    if (seg.p1.x === seg.p2.x) {\n      if (seg.p1.y > seg.p2.y) {\n        return 'sn';\n      }\n      return 'ns';\n    }\n    if (seg.p1.y === seg.p2.y) {\n      if (seg.p1.x > seg.p2.x) {\n        return 'ew';\n      }\n      return 'we';\n    }\n  }\n\n  private getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners) {\n    const { pointSize } = this;\n\n    let {\n      p1: { x, y },\n      cr,\n    } = seg;\n\n    x = x * pointSize;\n    y = y * pointSize;\n\n    const xmcr = round(x - cr);\n    const xpcr = round(x + cr);\n\n    const ymcr = round(y - cr);\n    const ypcr = round(y + cr);\n\n    x = round(x);\n    y = round(y);\n\n    const segDir = this.getDir(seg);\n    const prevSegDir = this.getDir(prevSeg);\n\n    let path = '';\n    if (cr && roundOuterCorners && prevSegDir === 'we' && segDir === 'ns') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'ns' && segDir === 'ew') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'ew' && segDir === 'sn') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'sn' && segDir === 'we') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'sn' && segDir === 'ew') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'ew' && segDir === 'ns') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'ns' && segDir === 'we') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'we' && segDir === 'sn') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else {\n      path += `L${x} ${y} `;\n    }\n    return path;\n  }\n\n  private getUniqId() {\n    return String(this.lastUniqId++);\n  }\n\n  private generatePaths() {\n    const {\n      pointSize,\n      options: { roundOuterCorners, roundInnerCorners, cornerBlocksAsCircles },\n    } = this;\n\n    const { lines } = this;\n    const paths: string[] = [];\n\n    Object.keys(lines).forEach((key) => {\n      let path = '';\n      for (const [lineIdx, line] of [lines[key], ...(lines[key].crops as LineSegment[][])].entries()) {\n        for (const [segIdx, seg] of line.entries()) {\n          let {\n            p1: { x, y },\n            cr,\n          } = seg;\n\n          x = x * pointSize;\n          y = y * pointSize;\n\n          const xpcr = round(x + cr);\n          const ypcr = round(y + cr);\n\n          x = round(x);\n          y = round(y);\n\n          const prevSeg = line[segIdx - 1] || line[line.length - 1];\n          const nextSeg = line[segIdx + 1] || line[0];\n\n          const segDir = this.getDir(seg);\n          const prevSegDir = this.getDir(prevSeg);\n\n          if (segIdx === 0) {\n            if (roundOuterCorners) {\n              if (lineIdx === 0) {\n                path += `M${xpcr} ${y} `;\n              } else {\n                path += `M${x} ${ypcr} `;\n              }\n            } else {\n              path += `M${x} ${y} `;\n            }\n          } else if (segIdx === line.length - 1) {\n            path += this.getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners);\n            path += this.getSubPath(nextSeg, seg, roundOuterCorners, roundInnerCorners);\n            path += 'Z';\n          } else if (prevSegDir !== segDir) {\n            path += this.getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners);\n          }\n        }\n      }\n      paths.push(`<path d=\"${path}\"/>`);\n    });\n\n    if (cornerBlocksAsCircles) {\n      const offsetSize = this.pointSize * this.matrixSize - this.pointSize * 7;\n      [\n        [0, 0],\n        [offsetSize, 0],\n        [0, offsetSize],\n      ].forEach(([ox, oy]) => {\n        const centerX = round((this.pointSize * 7) / 2 + ox);\n        const centerY = round((this.pointSize * 7) / 2 + oy);\n\n        let outerRadius = round((this.pointSize * 7) / 2);\n        const innerRadius = round((this.pointSize * 7) / 2 - this.pointSize);\n\n        // Big circle\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ \\\nM ${centerX} ${centerY - innerRadius} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY + innerRadius)} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY - innerRadius)} \\\nZ\" />`);\n\n        // Small circle\n        outerRadius = round((this.pointSize * 7) / 2 - this.pointSize * 2);\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ\" />`);\n      });\n    }\n\n    this.paths = paths;\n  }\n\n  private svgAdditionalContent(additionalContent): string {\n    if (typeof additionalContent === 'function') {\n      return additionalContent(this);\n    }\n\n    if (typeof additionalContent === 'string') {\n      return additionalContent;\n    }\n\n    return additionalContent || '';\n  }\n\n  get svg() {\n    const { size, fill } = this.options;\n\n    return `\\\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${size} ${size}\" width=\"${size}\" height=\"${size}\" fill=\"${fill}\">\n${this.svgAdditionalContent(this.options.preContent)}\n${this.paths.join('\\n')}\n${this.svgAdditionalContent(this.options.postContent)}\n</svg>`;\n  }\n}\n"],"mappings":"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G,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,IAAI,IAAI,KACT,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,KACT,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,MACvB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,IAAI,KAAK,MACvB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,GAAG,KAAK,MACtB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,IAAI,KAAK,MACvB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,MACvB,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,KAAK,MACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,MACvB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,MACvB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,KACpB,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,MACvB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACrB,CAAC,GAAG,KAAK,KAAK,IAAI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"},"metadata":{},"sourceType":"module","externalDependencies":[]}