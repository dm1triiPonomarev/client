[{"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/index.tsx":"1","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/reportWebVitals.ts":"2","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/App.tsx":"3","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/components/Links/index.tsx":"4","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/components/Input/index.tsx":"5","/Users/dmitrijponomarev/Desktop/1337/client/src/index.tsx":"6","/Users/dmitrijponomarev/Desktop/1337/client/src/reportWebVitals.ts":"7","/Users/dmitrijponomarev/Desktop/1337/client/src/App.tsx":"8","/Users/dmitrijponomarev/Desktop/1337/client/src/components/Input/index.tsx":"9","/Users/dmitrijponomarev/Desktop/1337/client/src/components/Links/index.tsx":"10"},{"size":554,"mtime":1699017880000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1699017880000,"results":"13","hashOfConfig":"12"},{"size":5838,"mtime":1705047071704,"results":"14","hashOfConfig":"12"},{"size":2653,"mtime":1699017880000,"results":"15","hashOfConfig":"12"},{"size":487,"mtime":1699017880000,"results":"16","hashOfConfig":"12"},{"size":554,"mtime":1705048657006,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1705048657007,"results":"19","hashOfConfig":"18"},{"size":5851,"mtime":1705048657005,"results":"20","hashOfConfig":"18"},{"size":487,"mtime":1705048657005,"results":"21","hashOfConfig":"18"},{"size":2819,"mtime":1705048657005,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hr3ijb",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4mxz",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/index.tsx",[],[],"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/reportWebVitals.ts",[],[],"/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/App.tsx",["55"],[],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport { useSubscribe } from 'react-pwa-push-notifications';\nimport toast, { Toaster } from 'react-hot-toast';\nimport TextInput from './components/Input';\nimport axios from 'axios';\nimport Links from './components/Links';\nimport { QRCode, QRSvg } from 'sexy-qr';\n// in PROD use from .env\nconst PUBLIC_KEY =\n  'BDZJSiMXSJUhryPkjFh_H84ZeEjVNfq5STCXVDEW4bpXye1mybGCjufRFIVmMxJN1wHOGUunGyBra0qvSa0fGJ8';\n\nfunction App() {\n  const [loadingSubscribe, setLoadingSubscribe] = useState<boolean>(false);\n  const [loadingPush, setLoadingPush] = useState<boolean>(false);\n  const [pushId, setPushId] = useState<string>('');\n  const [message, setMessage] = useState<string>('World');\n  const [title, setTitle] = useState<string>('Hello');\n  const [subscribeId, setSubscribeId] = useState<string>('');\n  const [showSubscribe, setShowSubscribe] = useState<boolean>(true);\n\n  const onShowSubscribe = () => {\n    setShowSubscribe(true);\n  };\n  const onShowPush = () => {\n    setShowSubscribe(false);\n  };\n\n  const qrCode = useMemo(() => {\n    const qr = new QRCode({\n      content: window.location.href,\n      ecl: 'M',\n    });\n    return new QRSvg(qr, {\n      fill: '#182026',\n      cornerBlocksAsCircles: true,\n      size: 200,\n      radiusFactor: 0.75,\n      cornerBlockRadiusFactor: 2,\n      roundOuterCorners: true,\n      roundInnerCorners: true,\n    }).svg;\n  }, []);\n\n  const { getSubscription } = useSubscribe({ publicKey: PUBLIC_KEY });\n\n  const onSubmitSubscribe = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n      setLoadingSubscribe(true);\n      try {\n        const subscription = await getSubscription();\n        await axios.post('https://push.fancy-app.site/api/subscribe', {\n          subscription: subscription,\n          id: subscribeId,\n        });\n        toast.success('Subscribe success');\n      } catch (e: any) {\n        console.warn(e);\n        toast.error(`${JSON.stringify(e)}`);\n      } finally {\n        setLoadingSubscribe(false);\n      }\n    },\n    [getSubscription],\n  );\n\n  const onSubmitPush = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n      setLoadingPush(true);\n      try {\n        await axios.post('https://push.fancy-app.site/api/send', {\n          message,\n          title,\n          id: pushId,\n        });\n        toast.success('Push success');\n      } catch (e: any) {\n        toast.error(`${JSON.stringify(e)}`);\n      } finally {\n        setLoadingPush(false);\n      }\n    },\n    [pushId, message, title],\n  );\n\n  const onChange = useCallback(\n    (setState: React.Dispatch<React.SetStateAction<string>>) =>\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        setState(e.target.value);\n      },\n    [],\n  );\n\n  useEffect(() => {\n    // axios.post('https://push.fancy-app.site/api/send', {\n    //   message: 'message',\n    //   title: 'title',\n    //   id: '6de80facfeba18bebf5bfb5cddf583df',\n    // });\n\n    FingerprintJS.load()\n      .then((fp) => fp.get())\n      .then((result) => {\n        setSubscribeId(result.visitorId);\n        setPushId(result.visitorId);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div>\n          <div className=\"message\">\n            <div className=\"title\"> Use as PWA</div>\n            <div>\n              You need to install the site on your home screen. Subscribe to\n              push notifications. Then you can test sending notifications.\n            </div>\n          </div>\n          <div\n            className={'qrCode'}\n            dangerouslySetInnerHTML={{ __html: qrCode }}\n          />\n        </div>\n        <div className=\"tabs\">\n          <div className={`tab-item`}>\n            <button\n              className={`tab ${showSubscribe ? 'active' : ''}`}\n              onClick={onShowSubscribe}\n            >\n              Subscribe\n            </button>\n          </div>\n          <div className={`tab-item`}>\n            <button\n              className={`tab ${!showSubscribe ? 'active' : ''}`}\n              onClick={onShowPush}\n            >\n              Push\n            </button>\n          </div>\n        </div>\n        {!showSubscribe && (\n          <div className=\"send\">\n            <form onSubmit={onSubmitPush}>\n              <div className=\"title\">Notification</div>\n              <TextInput\n                id=\"idSubscribe\"\n                placeholder=\"id\"\n                value={pushId}\n                onChange={onChange(setPushId)}\n              />\n              <TextInput\n                id=\"title\"\n                placeholder=\"title\"\n                value={title}\n                onChange={onChange(setTitle)}\n              />\n              <TextInput\n                id=\"message\"\n                placeholder=\"message\"\n                value={message}\n                onChange={onChange(setMessage)}\n              />\n              <button className={loadingPush ? 'loading' : ''} type=\"submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        )}\n        {showSubscribe && (\n          <div className=\"send\">\n            <form onSubmit={onSubmitSubscribe}>\n              <div className=\"title\">Your Id</div>\n              <TextInput\n                id=\"fingerprint\"\n                placeholder=\"Your id\"\n                value={subscribeId}\n                onChange={onChange(setSubscribeId)}\n              />\n              <button\n                className={loadingSubscribe ? 'loading' : ''}\n                type=\"submit\"\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        )}\n        <div>\n          <Links />\n        </div>\n      </main>\n      <Toaster />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/components/Links/index.tsx",["56","57"],[],"import React from 'react'\n\nconst Links = () => {\n    return <div className=\"links\">\n        <a className=\"links-item\" target=\"_blank\" href=\"https://github.com/u4aew/react-pwa-push-notifications\">\n            <img src=\"data:image/svg+xml;base64, PHN2ZyB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IiB2aWV3Qm94PSIwIDAgMTAyNCAxMDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgo8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGNsaXAtcnVsZT0iZXZlbm9kZCIgZD0iTTggMEMzLjU4IDAgMCAzLjU4IDAgOEMwIDExLjU0IDIuMjkgMTQuNTMgNS40NyAxNS41OUM1Ljg3IDE1LjY2IDYuMDIgMTUuNDIgNi4wMiAxNS4yMUM2LjAyIDE1LjAyIDYuMDEgMTQuMzkgNi4wMSAxMy43MkM0IDE0LjA5IDMuNDggMTMuMjMgMy4zMiAxMi43OEMzLjIzIDEyLjU1IDIuODQgMTEuODQgMi41IDExLjY1QzIuMjIgMTEuNSAxLjgyIDExLjEzIDIuNDkgMTEuMTJDMy4xMiAxMS4xMSAzLjU3IDExLjcgMy43MiAxMS45NEM0LjQ0IDEzLjE1IDUuNTkgMTIuODEgNi4wNSAxMi42QzYuMTIgMTIuMDggNi4zMyAxMS43MyA2LjU2IDExLjUzQzQuNzggMTEuMzMgMi45MiAxMC42NCAyLjkyIDcuNThDMi45MiA2LjcxIDMuMjMgNS45OSAzLjc0IDUuNDNDMy42NiA1LjIzIDMuMzggNC40MSAzLjgyIDMuMzFDMy44MiAzLjMxIDQuNDkgMy4xIDYuMDIgNC4xM0M2LjY2IDMuOTUgNy4zNCAzLjg2IDguMDIgMy44NkM4LjcgMy44NiA5LjM4IDMuOTUgMTAuMDIgNC4xM0MxMS41NSAzLjA5IDEyLjIyIDMuMzEgMTIuMjIgMy4zMUMxMi42NiA0LjQxIDEyLjM4IDUuMjMgMTIuMyA1LjQzQzEyLjgxIDUuOTkgMTMuMTIgNi43IDEzLjEyIDcuNThDMTMuMTIgMTAuNjUgMTEuMjUgMTEuMzMgOS40NyAxMS41M0M5Ljc2IDExLjc4IDEwLjAxIDEyLjI2IDEwLjAxIDEzLjAxQzEwLjAxIDE0LjA4IDEwIDE0Ljk0IDEwIDE1LjIxQzEwIDE1LjQyIDEwLjE1IDE1LjY3IDEwLjU1IDE1LjU5QzEzLjcxIDE0LjUzIDE2IDExLjUzIDE2IDhDMTYgMy41OCAxMi40MiAwIDggMFoiIHRyYW5zZm9ybT0ic2NhbGUoNjQpIiBmaWxsPSIjMUIxRjIzIi8+Cjwvc3ZnPgo=\" alt=\"\"/>\n        </a>\n        <a className=\"links-item\" target=\"_blank\" href=\"https://www.npmjs.com/package/react-pwa-push-notifications?activeTab=readme#usage\">\n            <img src=\"data:image/svg+xml;base64, PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4PSIwcHgiIHk9IjBweCIgd2lkdGg9IjU0MHB4IiBoZWlnaHQ9IjIxMHB4IiB2aWV3Qm94PSIwIDAgMTggNyI+DQo8cGF0aCBmaWxsPSIjQ0IzODM3IiBkPSJNMCwwaDE4djZIOXYxSDVWNkgwVjB6IE0xLDVoMlYyaDF2M2gxVjFIMVY1eiBNNiwxdjVoMlY1aDJWMUg2eiBNOCwyaDF2Mkg4VjJ6IE0xMSwxdjRoMlYyaDF2M2gxVjJoMXYzaDFWMUgxMXoiLz4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHBvaW50cz0iMSw1IDMsNSAzLDIgNCwyIDQsNSA1LDUgNSwxIDEsMSAiLz4NCjxwYXRoIGZpbGw9IiNGRkZGRkYiIGQ9Ik02LDF2NWgyVjVoMlYxSDZ6IE05LDRIOFYyaDFWNHoiLz4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHBvaW50cz0iMTEsMSAxMSw1IDEzLDUgMTMsMiAxNCwyIDE0LDUgMTUsNSAxNSwyIDE2LDIgMTYsNSAxNyw1IDE3LDEgIi8+DQo8L3N2Zz4NCg==\" alt=\"\"/>\n        </a>\n    </div>\n}\n\nexport default Links\n","/Users/dmitrijponomarev/Downloads/react-pwa-push-notifications-main/demo/client/src/components/Input/index.tsx",[],[],"/Users/dmitrijponomarev/Desktop/1337/client/src/index.tsx",[],[],"/Users/dmitrijponomarev/Desktop/1337/client/src/reportWebVitals.ts",[],[],"/Users/dmitrijponomarev/Desktop/1337/client/src/App.tsx",[],[],"/Users/dmitrijponomarev/Desktop/1337/client/src/components/Input/index.tsx",[],[],"/Users/dmitrijponomarev/Desktop/1337/client/src/components/Links/index.tsx",[],[],{"ruleId":"58","severity":1,"message":"59","line":66,"column":5,"nodeType":"60","endLine":66,"endColumn":22,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":9,"nodeType":"64","messageId":"65","endLine":5,"endColumn":112,"fix":"66"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":9,"nodeType":"64","messageId":"65","endLine":8,"endColumn":140,"fix":"67"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'subscribeId'. Either include it or remove the dependency array.","ArrayExpression",["68"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"69","text":"70"},{"range":"71","text":"70"},{"desc":"72","fix":"73"},[194,194]," rel=\"noreferrer\"",[1699,1699],"Update the dependencies array to be: [getSubscription, subscribeId]",{"range":"74","text":"75"},[2145,2162],"[getSubscription, subscribeId]"]